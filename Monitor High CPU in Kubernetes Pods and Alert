#!/bin/bash

# Requires: metrics-server to be running in the cluster

NAMESPACE=default
CPU_THRESHOLD=80  # In percentage

# Fetch CPU usage
echo "Checking CPU usage for pods in namespace: $NAMESPACE"

kubectl top pod -n $NAMESPACE | tail -n +2 | while read pod cpu mem; do
  cpu_value=$(echo $cpu | sed 's/m//')  # Remove the 'm' from the millicores value
  cpu_percent=$((cpu_value / 10))

  if [ "$cpu_percent" -gt "$CPU_THRESHOLD" ]; then
    echo "ALERT: Pod $pod is using high CPU: ${cpu_percent}%"
    # You could integrate this with Slack, email, etc.
  fi
done

Alerts if any pod exceeds a CPU usage threshold â€” useful for debugging performance issues.

Simplified:

#!/bin/bash

# Threshold for CPU usage (%)
THRESHOLD=80

# Get all pods and their CPU usage
pods=$(kubectl top pod --no-headers)

# Loop through each pod and check CPU usage
while read -r pod cpu mem; do
  cpu_val=${cpu::-1}  # Remove "m" at the end (millicores)
  if [ "$cpu_val" -gt "$THRESHOLD" ]; then
    echo "ALERT: Pod $pod is using high CPU: $cpu"
  fi
done <<< "$pods"

